apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: "bm-frontend"
  name: "bm-frontend"
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "bm-frontend"
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "bm-frontend"
    spec:
      containers:
        - image: # TODO: INSERT ACTUAL AWS ECR IMAGE:live HERE
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /manifest.json
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
            initialDelaySeconds: 60
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /manifest.json
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
            initialDelaySeconds: 30
          name: "bm-frontend"
          env:
            - name: "REACT_APP_ENVIRONMENT"
              value: "PROD"
          ports:
            - containerPort: 3000
              protocol: TCP
          resources:
            requests:
              cpu: 1000m
              memory: 2G
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: "bm-frontend"
  name: "bm-frontend"
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app: "bm-frontend"
  sessionAffinity: None
  type: NodePort